public final class com/copperleaf/trellis/BuildConfig {
	public static final field BUILD_TYPE Ljava/lang/String;
	public static final field DEBUG Z
	public static final field LIBRARY_PACKAGE_NAME Ljava/lang/String;
	public fun <init> ()V
}

public final class com/copperleaf/trellis/base/AlsoSpek : com/copperleaf/trellis/base/BaseSpek {
	public fun <init> (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)V
	public fun evaluate (Lcom/copperleaf/trellis/visitor/SpekVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract class com/copperleaf/trellis/base/BaseSpek : com/copperleaf/trellis/base/Spek {
	public fun <init> (Ljava/util/List;)V
	public fun <init> ([Lcom/copperleaf/trellis/base/Spek;)V
	public final fun getChildren ()Ljava/util/List;
	public fun getSpekName ()Ljava/lang/String;
	public final fun toString ()Ljava/lang/String;
}

public class com/copperleaf/trellis/base/BinaryOperationSpek : com/copperleaf/trellis/base/BaseSpek {
	public fun <init> (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;Lkotlin/jvm/functions/Function2;)V
	public fun evaluate (Lcom/copperleaf/trellis/visitor/SpekVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class com/copperleaf/trellis/base/CandidateSpek : com/copperleaf/trellis/base/BaseSpek {
	public fun <init> ()V
	public fun evaluate (Lcom/copperleaf/trellis/visitor/SpekVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class com/copperleaf/trellis/base/LazySpek : com/copperleaf/trellis/base/Spek {
	public fun <init> ()V
	public fun evaluate (Lcom/copperleaf/trellis/visitor/SpekVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getChildren ()Ljava/util/List;
	public fun getSpekName ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public final fun uses (Lcom/copperleaf/trellis/base/Spek;)V
}

public final class com/copperleaf/trellis/base/LazyValueSpek : com/copperleaf/trellis/base/BaseSpek {
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public fun evaluate (Lcom/copperleaf/trellis/visitor/SpekVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class com/copperleaf/trellis/base/MapCandidateSpek : com/copperleaf/trellis/base/BaseSpek {
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public fun evaluate (Lcom/copperleaf/trellis/visitor/SpekVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class com/copperleaf/trellis/base/NamedSpek : com/copperleaf/trellis/base/BaseSpek {
	public fun <init> (Ljava/lang/String;Lcom/copperleaf/trellis/base/Spek;)V
	public fun evaluate (Lcom/copperleaf/trellis/visitor/SpekVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun getBase ()Lcom/copperleaf/trellis/base/Spek;
	public final fun getName ()Ljava/lang/String;
	public fun getSpekName ()Ljava/lang/String;
}

public final class com/copperleaf/trellis/base/NamedSpekKt {
	public static final fun named (Lcom/copperleaf/trellis/base/Spek;Ljava/lang/String;)Lcom/copperleaf/trellis/base/Spek;
}

public abstract interface class com/copperleaf/trellis/base/Spek {
	public abstract fun evaluate (Lcom/copperleaf/trellis/visitor/SpekVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/List;
	public abstract fun getSpekName ()Ljava/lang/String;
}

public class com/copperleaf/trellis/base/UnaryOperationSpek : com/copperleaf/trellis/base/BaseSpek {
	public fun <init> (Lcom/copperleaf/trellis/base/Spek;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Lcom/copperleaf/trellis/base/Spek;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun evaluate (Lcom/copperleaf/trellis/visitor/SpekVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class com/copperleaf/trellis/base/ValueSpek : com/copperleaf/trellis/base/BaseSpek {
	public fun <init> (Ljava/lang/Object;)V
	public fun evaluate (Lcom/copperleaf/trellis/visitor/SpekVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getSpekName ()Ljava/lang/String;
}

public final class com/copperleaf/trellis/impl/booleans/AndSpek : com/copperleaf/trellis/base/BinaryOperationSpek {
	public fun <init> (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)V
}

public final class com/copperleaf/trellis/impl/booleans/AndSpekKt {
	public static final fun and (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
	public static final fun andNot (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
	public static final fun unsafeAnd (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
}

public final class com/copperleaf/trellis/impl/booleans/NotSpek : com/copperleaf/trellis/base/UnaryOperationSpek {
	public fun <init> (Lcom/copperleaf/trellis/base/Spek;)V
}

public final class com/copperleaf/trellis/impl/booleans/NotSpekKt {
	public static final fun not (Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
	public static final fun unsafeNot (Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
}

public final class com/copperleaf/trellis/impl/booleans/OrSpek : com/copperleaf/trellis/base/BinaryOperationSpek {
	public fun <init> (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)V
}

public final class com/copperleaf/trellis/impl/booleans/OrSpekKt {
	public static final fun or (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
	public static final fun orNot (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
	public static final fun unsafeOr (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
}

public final class com/copperleaf/trellis/impl/comparison/EqualsSpek : com/copperleaf/trellis/base/BinaryOperationSpek {
	public fun <init> (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)V
}

public final class com/copperleaf/trellis/impl/comparison/EqualsSpekKt {
	public static final fun eq (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
	public static final fun unsafeEq (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
}

public final class com/copperleaf/trellis/impl/comparison/GreaterThanSpek : com/copperleaf/trellis/base/BinaryOperationSpek {
	public fun <init> (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;Z)V
}

public final class com/copperleaf/trellis/impl/comparison/GreaterThanSpekKt {
	public static final fun gt (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
	public static final fun gte (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
	public static final fun unsafeGt (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
	public static final fun unsafeGte (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
}

public final class com/copperleaf/trellis/impl/comparison/LessThanSpek : com/copperleaf/trellis/base/BinaryOperationSpek {
	public fun <init> (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;Z)V
}

public final class com/copperleaf/trellis/impl/comparison/LessThanSpekKt {
	public static final fun lt (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
	public static final fun lte (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
	public static final fun unsafeLt (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
	public static final fun unsafeLte (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
}

public final class com/copperleaf/trellis/impl/comparison/MaxSpek : com/copperleaf/trellis/base/BaseSpek {
	public fun <init> ([Lcom/copperleaf/trellis/base/Spek;)V
	public fun evaluate (Lcom/copperleaf/trellis/visitor/SpekVisitor;Ljava/lang/Object;)Ljava/lang/Comparable;
	public synthetic fun evaluate (Lcom/copperleaf/trellis/visitor/SpekVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class com/copperleaf/trellis/impl/comparison/MinSpek : com/copperleaf/trellis/base/BaseSpek {
	public fun <init> ([Lcom/copperleaf/trellis/base/Spek;)V
	public fun evaluate (Lcom/copperleaf/trellis/visitor/SpekVisitor;Ljava/lang/Object;)Ljava/lang/Comparable;
	public synthetic fun evaluate (Lcom/copperleaf/trellis/visitor/SpekVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class com/copperleaf/trellis/impl/conditionals/IfSpek : com/copperleaf/trellis/base/BaseSpek {
	public fun <init> (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)V
	public fun evaluate (Lcom/copperleaf/trellis/visitor/SpekVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class com/copperleaf/trellis/impl/conditionals/IfSpekKt {
	public static final fun then (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
}

public final class com/copperleaf/trellis/impl/math/DivideSpek : com/copperleaf/trellis/base/BinaryOperationSpek {
	public fun <init> (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)V
}

public final class com/copperleaf/trellis/impl/math/DivideSpekKt {
	public static final fun div (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
	public static final fun unsafeDivide (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
}

public final class com/copperleaf/trellis/impl/math/MinusSpek : com/copperleaf/trellis/base/BinaryOperationSpek {
	public fun <init> (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)V
}

public final class com/copperleaf/trellis/impl/math/MinusSpekKt {
	public static final fun minus (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
	public static final fun unsafeMinus (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
}

public final class com/copperleaf/trellis/impl/math/MultiplySpek : com/copperleaf/trellis/base/BinaryOperationSpek {
	public fun <init> (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)V
}

public final class com/copperleaf/trellis/impl/math/MultiplySpekKt {
	public static final fun times (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
	public static final fun unsafeMultiply (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
}

public final class com/copperleaf/trellis/impl/math/PlusSpek : com/copperleaf/trellis/base/BinaryOperationSpek {
	public fun <init> (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)V
}

public final class com/copperleaf/trellis/impl/math/PlusSpekKt {
	public static final fun plus (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
	public static final fun unsafePlus (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/base/Spek;)Lcom/copperleaf/trellis/base/Spek;
}

public final class com/copperleaf/trellis/impl/strings/MaxLengthSpek : com/copperleaf/trellis/base/BaseSpek {
	public fun <init> (Lcom/copperleaf/trellis/base/Spek;)V
	public synthetic fun evaluate (Lcom/copperleaf/trellis/visitor/SpekVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun evaluate (Lcom/copperleaf/trellis/visitor/SpekVisitor;Ljava/lang/String;)Ljava/lang/Boolean;
}

public final class com/copperleaf/trellis/impl/strings/MinLengthSpek : com/copperleaf/trellis/base/BaseSpek {
	public fun <init> (Lcom/copperleaf/trellis/base/Spek;)V
	public synthetic fun evaluate (Lcom/copperleaf/trellis/visitor/SpekVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun evaluate (Lcom/copperleaf/trellis/visitor/SpekVisitor;Ljava/lang/String;)Ljava/lang/Boolean;
}

public final class com/copperleaf/trellis/impl/strings/StringLengthSpek : com/copperleaf/trellis/base/BaseSpek {
	public fun <init> ()V
	public synthetic fun evaluate (Lcom/copperleaf/trellis/visitor/SpekVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun evaluate (Lcom/copperleaf/trellis/visitor/SpekVisitor;Ljava/lang/String;)Ljava/lang/Integer;
}

public final class com/copperleaf/trellis/util/PrintSpekTreeKt {
	public static final fun printSpekTree (Lcom/copperleaf/trellis/base/Spek;)Ljava/lang/String;
}

public final class com/copperleaf/trellis/visitor/EmptyVisitor : com/copperleaf/trellis/visitor/SpekVisitor {
	public static final field INSTANCE Lcom/copperleaf/trellis/visitor/EmptyVisitor;
	public fun enter (Lcom/copperleaf/trellis/base/Spek;)V
	public fun leave (Lcom/copperleaf/trellis/base/Spek;Ljava/lang/Object;)V
}

public final class com/copperleaf/trellis/visitor/PrintlnVisitor : com/copperleaf/trellis/visitor/SpekVisitor {
	public fun <init> ()V
	public fun enter (Lcom/copperleaf/trellis/base/Spek;)V
	public fun leave (Lcom/copperleaf/trellis/base/Spek;Ljava/lang/Object;)V
}

public abstract interface class com/copperleaf/trellis/visitor/SpekVisitor {
	public abstract fun enter (Lcom/copperleaf/trellis/base/Spek;)V
	public abstract fun leave (Lcom/copperleaf/trellis/base/Spek;Ljava/lang/Object;)V
}

public final class com/copperleaf/trellis/visitor/SpekVisitorKt {
	public static final fun explore (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/visitor/SpekVisitor;)V
	public static final fun exploring (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/visitor/SpekVisitor;Lkotlin/jvm/functions/Function1;)V
	public static final fun visiting (Lcom/copperleaf/trellis/base/Spek;Lcom/copperleaf/trellis/visitor/SpekVisitor;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class com/copperleaf/trellis/visitor/StringBuilderVisitor : com/copperleaf/trellis/visitor/SpekVisitor {
	public fun <init> ()V
	public fun <init> (Ljava/lang/StringBuilder;)V
	public synthetic fun <init> (Ljava/lang/StringBuilder;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun enter (Lcom/copperleaf/trellis/base/Spek;)V
	public final fun getOut ()Ljava/lang/StringBuilder;
	public fun leave (Lcom/copperleaf/trellis/base/Spek;Ljava/lang/Object;)V
}

